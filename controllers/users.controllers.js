const { rtdb } = require('../config/db'); // Import the Firebase Realtime Database instance
const userSchema = require('../model/user.model'); // Import the user schema
const { validateUserData } = require('../utils/validation'); // Assuming a utility exists for validation
const admin = require('firebase-admin'); // Ensure Firebase Admin is imported

const createUser = async(req, res) => {
    try {

        // Log the incoming request body to check what data is being sent
        console.log('Received data:', req.body);

        const userData = req.body; // Get user data from the request body

        // Validate the required fields from the schema
        if (!userData || !userData.name || !userData.email || !userData.hashedPassword) {
            return res.status(400).json({ error: 'Name, email, and password are required' });
        }

        // Assuming validateUserData is a utility to check schema-like validation
        const validationResponse = await validateUserData(userData, userSchema);

        if (!validationResponse.valid) {
            return res.status(400).json({ error: validationResponse.error }); // Send error response if validation fails
        }

        // Check if rtdb is properly connected
        console.log('Checking Firebase Realtime Database connection...');
        if (!rtdb) {
            return res.status(500).json({ error: 'Firebase Realtime Database is not connected' });
        }
        console.log('Firebase Realtime Database connection successful!');

        // Prepare the new user object based on the schema
        const newUser = {
            name: userData.name,
            email: userData.email,
            hashedPassword: userData.hashedPassword,
            createdAt: admin.database.ServerValue.TIMESTAMP, // Use Realtime Database timestamp
            updatedAt: admin.database.ServerValue.TIMESTAMP, // Use Realtime Database timestamp
            isActive: userData.isActive !== undefined ? userData.isActive : userSchema.isActive.default, // Default if not provided
            profilePicture: userData.profilePicture !== undefined ? userData.profilePicture : userSchema.profilePicture.default, // Default if not provided
        };

        // Add the user to the Firebase Realtime Database under the 'users' node
        const userRef = rtdb.ref('users').push(); // Generate a new unique key for the user
        await userRef.set(newUser); // Set the new user data at the generated reference

        // Send a success response
        res.status(201).json({
            message: "User created successfully",
            user: { id: userRef.key, ...newUser }, // Include the unique key generated by RTDB
        });

    } catch (error) {
        console.error("Error creating user:", error.message);
        res.status(500).json({ error: "Error creating user" });
    }
};

module.exports = { createUser };